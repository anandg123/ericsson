apiVersion: ran.openshift.io/v1
kind: PolicyGenTemplate
metadata:
  name: "geored-workload-optimize-ztp-ts-1-8"
  namespace: "ztp-site"
spec:
  bindingRules:
    sites: "geored-workload"
    version: TS-1.8
  bindingExcludedRules:
    ztp-done: ""
  sourceFiles:
  # we pause the different MCPs
    - fileName: custom/CustomMCP.yaml
      policyName: "pause-mcp"
      # This policy is evaluted only once
      # so, it does not conflict with the unpause one
      evaluationInterval:
        compliant: never
      metadata:
        name: master
        annotations:
          ran.openshift.io/ztp-deploy-wave: "1"
      spec:
        paused: true
    # - fileName: custom/CustomMCP.yaml
    #   policyName: "pause-mcp"
    #   evaluationInterval:
    #     compliant: never
    #   metadata:
    #     name: standard
    #     annotations:
    #       ran.openshift.io/ztp-deploy-wave: "1"
    #   spec:
    #     paused: true
    # - fileName: custom/CustomMCP.yaml
    #   policyName: "pause-mcp"
    #   evaluationInterval:
    #     compliant: never
    #   metadata:
    #     name: ht100gb
    #     annotations:
    #       ran.openshift.io/ztp-deploy-wave: "1"
    #   spec:
    #     paused: true
  # we unpause, and change the max-unavailable
  # to allow reoboting more than one node at once
  #
    - fileName: custom/CustomMCP.yaml
      policyName: "unpause-mcp"
      # This policy is evaluted only once
      # so, it does not conflict with the pause one
      evaluationInterval:
        compliant: never
      metadata:
        name: master
        annotations:
          # the proper wave to unpause:
          # after the mcs and performance profile is created
          # but for sure, before the validator
          ran.openshift.io/ztp-deploy-wave: "15"
          # this labe sets we have finished the pause
          # and nodes start rebooting with the new config
          # but also, makes the Policy uncompliant
          # the first time is created.
          # Forcing to remediate (will happen only once)
          ran.openshift.io/ztp-unpause-done: ""
      spec:
        paused: false
        # we unpause and allow reboot multiple nodes at once
        # this value will need some tune to find the better value
        maxUnavailable: 1
    # - fileName: custom/CustomMCP.yaml
    #   policyName: "unpause-mcp"
    #   evaluationInterval:
    #     compliant: never
    #   metadata:
    #     name: standard
    #     annotations:
    #       ran.openshift.io/ztp-deploy-wave: "15"
    #       ran.openshift.io/ztp-unpause-done: ""
    #   spec:
    #     paused: false
    #     maxUnavailable: 75%
    # - fileName: custom/CustomMCP.yaml
    #   policyName: "unpause-mcp"
    #   evaluationInterval:
    #     compliant: never
    #   metadata:
    #     name: ht100gb
    #     annotations:
    #       ran.openshift.io/ztp-deploy-wave: "15"
    #       ran.openshift.io/ztp-unpause-done: ""
    #   spec:
    #     paused: false
    #     maxUnavailable: 75%
  # we set the MCP configuration to its default about maxUnavailable
    - fileName: custom/CustomMCP.yaml
      policyName: "reset-mcp"
      metadata:
        name: master
        annotations:
          # the proper wave to reset the MCP
          # right after the validator
          # so, all the nodes have been rebooted
          # and all of them are working with the proper configuration
          ran.openshift.io/ztp-deploy-wave: "10001"
      spec:
        maxUnavailable: 1
    # - fileName: custom/CustomMCP.yaml
    #   policyName: "reset-mcp"
    #   metadata:
    #     name: standard
    #     annotations:
    #       ran.openshift.io/ztp-deploy-wave: "10001"
    #   spec:
    #     maxUnavailable: 1
    # - fileName: custom/CustomMCP.yaml
    #   policyName: "reset-mcp"
    #   metadata:
    #     name: ht100gb
    #     annotations:
    #       ran.openshift.io/ztp-deploy-wave: "10001"
    #   spec:
    #     maxUnavailable: 1

